services:
  rateservice:
    build: ..
    ports:
      - "8080:8080"
    env_file:
      - ../conf/.env.rateservice
    environment:
      APP_NAME: rateservice
    depends_on:
      rateservice-postgres:
        condition: service_healthy
    networks:
        - general-network
        - rateservice-network

  rateservice-postgres:
    image: postgres
    env_file:
      - ../conf/.env.rateservice
    ports:
      - '5433:5432'
    healthcheck:
      test: pg_isready -d rateservice -U ${POSTGRES_USER}
      interval: 3s
      retries: 5
    networks:
        - rateservice-network

  notifier:
    build: ..
    env_file:
      - ../conf/.env.notifier
    environment:
      APP_NAME: notifier
    depends_on:
      notifier-postgres:
        condition: service_healthy
    networks:
        - general-network
        - notifier-network

  notifier-postgres:
    image: postgres
    env_file:
      - ../conf/.env.notifier
    ports:
      - '5434:5432'
    healthcheck:
      test: pg_isready -d notifier -U ${POSTGRES_USER}
      interval: 3s
      retries: 5
    networks:
        - notifier-network

  nats:
    image: nats
    command:
      - "--js"
    networks:
      - general-network

networks:
  # general network for all services
  general-network:
    driver: bridge
  # networks for services and his internal dependencies
  rateservice-network:
    driver: bridge
  notifier-network:
    driver: bridge
